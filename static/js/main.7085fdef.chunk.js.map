{"version":3,"sources":["LineTo.js","RenderTree.js","Node.js","inputs/Add.js","BinarySearchTree.js","App.js","serviceWorker.js","index.js"],"names":["FixedContainer","styled","div","StyledSvg","svg","LineTo","fromPos","toPos","x1","x","width","y1","y","height","x2","y2","yDelta","Math","abs","xDelta","angle","atan","radius","offsetY","sin","offsetX","cos","newX1","newY1","newX2","newY2","strokeWidth","stroke","Root","Circle","props","NullPlaceholder","Cluster","RenderTree","nodes","level","treeHeight","parentPos","useState","leftNodePos","setLeftNodePos","rightNodePos","setRightNodePos","areNodesSamePosition","node1Pos","node2Pos","setNodePos","useCallback","element","isLeftNode","getAttribute","posObj","getBoundingClientRect","map","node","idx","children","left","right","currentPos","key","data-pos","ref","data","Node","this","form","Input","input","InputContainer","Button","disabled","Error","Add","root","setRoot","value","setValue","error","setError","newNodeHeight","type","onChange","e","valueInt","parseInt","target","onClick","preventDefault","addNode","newNode","TreeContainer","ControlPanel","NotMobileOrTabletOptimizedMessage","BinarySearchTree","window","innerHeight","innerWidth","windowDimensions","setWindowDimensions","handleResize","useEffect","addEventListener","getTreeHeight","childHeight","leftHeight","rightHeight","newRoot","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7085fdef.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components/macro';\n\nconst FixedContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100vw;\n`;\n\nconst StyledSvg = styled.svg`\n  height: 100%;\n  width: 100%;\n`;\n\nconst LineTo = ({ fromPos, toPos }) => {\n  const x1 = fromPos.x + (fromPos.width / 2);\n  const y1 = fromPos.y + (fromPos.height / 2);\n  const x2 = toPos.x + (toPos.width / 2);\n  const y2 = toPos.y + (toPos.height / 2);\n\n  const yDelta = Math.abs(y2 - y1);\n  const xDelta = Math.abs(x2 - x1);\n\n  const angle = Math.atan(yDelta / xDelta);\n  const radius = fromPos.height / 2;\n\n  const offsetY = radius * Math.sin(angle);\n  const offsetX = radius * Math.cos(angle);\n\n  const newX1 = x1 < x2 ? x1 + offsetX : x1 - offsetX;\n  const newY1 = y1 + offsetY;\n\n  const newX2 = x2 < x1 ? x2 + offsetX : x2 - offsetX;\n  const newY2 = y2 - offsetY;\n\n  return (\n    <FixedContainer>\n      <StyledSvg>\n        <line strokeWidth=\"2px\" stroke=\"white\" x1={newX1} y1={newY1} x2={newX2} y2={newY2} />\n      </StyledSvg>\n    </FixedContainer>\n  )\n};\n\nexport default LineTo;\n","import React, { useState, useCallback } from 'react';\nimport styled from 'styled-components/macro';\nimport LineTo from './LineTo';\n\nconst Root = styled.div`\n  display: flex;\n  width: fit-content;\n`;\n\nconst Circle = styled.div`\n  box-sizing: border-box;\n  border: 0.4vh solid white;\n  border-radius: 50%;\n  padding: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: ${props => `${4 - (props.height / 2)}vh`};\n  width: ${props => `${10 - props.height}vh`};\n  height: ${props => `${10 - props.height}vh`};\n  min-width: 7vh;\n  min-height: 7vh;\n`;\n\nconst NullPlaceholder = styled.div`\n  width: 1vh;\n  height: 1vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Cluster = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst RenderTree = ({ nodes, level, treeHeight, parentPos }) => {\n  const [leftNodePos, setLeftNodePos] = useState(null);\n  const [rightNodePos, setRightNodePos] = useState(null);\n\n  const areNodesSamePosition = (node1Pos, node2Pos) => {\n    if (!node1Pos || !node2Pos) return false;\n\n    return node1Pos.x === node2Pos.x && node1Pos.y === node2Pos.y;\n  };\n\n  // eslint-disable-next-line\n  const setNodePos = useCallback(element => {\n    if (element) {\n      const isLeftNode = element.getAttribute('data-pos') === 'left';\n      const posObj = element.getBoundingClientRect();\n\n      if (isLeftNode) {\n        if (!areNodesSamePosition(leftNodePos, posObj)) setLeftNodePos(posObj);\n      } else {\n        if (!areNodesSamePosition(rightNodePos, posObj)) setRightNodePos(posObj);\n      }\n    }\n  });\n\n  if (level === 0) return null;\n\n  return (\n    <Root>\n      {nodes.map((node, idx) => {\n        const children = node ? [node.left, node.right] : [null, null];\n        const currentPos = idx === 0 ? leftNodePos : rightNodePos;\n\n        return (\n          <Cluster key={`${level}${idx}`}>\n            {node ?\n              <Circle\n                data-pos={idx === 0 ? 'left' : 'right'}\n                height={treeHeight}\n                ref={setNodePos}\n              >\n                {node.data}\n              </Circle> :\n              <NullPlaceholder />\n            }\n            <RenderTree parentPos={currentPos} nodes={children} level={level - 1} treeHeight={treeHeight} />\n            {parentPos && currentPos && <LineTo fromPos={parentPos} toPos={currentPos} />}\n          </Cluster>\n        );\n      })}\n    </Root>\n  );\n}\n\nexport default RenderTree;\n","class Node {\n  constructor(data) {\n    this.data = data;\n    this.left = null;\n    this.right = null;\n  }\n}\n\nexport default Node;\n","import React, { useState } from 'react';\nimport styled from 'styled-components/macro';\nimport Node from '../Node';\n\nconst Root = styled.form`\n  display: flex;\n`;\n\nconst Input = styled.input`\n`;\n\nconst InputContainer = styled.div`\n  display: flex;\n  height: fit-content;\n`;\n\nconst Button = styled.input`\n  color: ${props => props.disabled ? `grey` : `white`};\n  cursor: ${props => props.disabled ? `default` : `pointer`};\n  padding-left: 7px;\n  background: none;\n  border: none;\n  font-size: 14px;\n`;\n\nconst Error = styled.div`\n  font-size: 14px;\n  font-weight: bold;\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n  margin-bottom: 1px;\n`;\n\nconst Add = ({ root, setRoot }) => {\n  const [value, setValue] = useState('');\n  const [error, setError] = useState('');\n\n  let newNodeHeight = 1;\n\n  const addNode = (data, node = root) => {\n    newNodeHeight += 1;\n\n    if (newNodeHeight > 7) {\n      setError('Tree is getting too tall. Try entering a different value.');\n      return;\n    }\n\n    const newNode = new Node(data);\n\n    if (node === null) {\n      setRoot(newNode);\n    } else if (data < node.data) {\n      if (node.left === null) {\n        node.left = newNode;\n      } else {\n        addNode(data, node.left);\n      }\n    } else if (data > node.data) {\n      if (node.right === null) {\n        node.right = newNode;\n      } else {\n        addNode(data, node.right);\n      }\n    } else {\n      setError('Duplicate values not allowed');\n    }\n  }\n\n  const handleChange = e => {\n    const valueInt = parseInt(e.target.value);\n    if (valueInt > 999 || valueInt < -999) {\n      setError('Please enter a value between -999 and 999');\n    } else {\n      setError('');\n    }\n\n    setValue(e.target.value);\n  };\n\n  const handleClickAdd = e => {\n    e.preventDefault();\n\n    setError('');\n    addNode(parseInt(value));\n    newNodeHeight = 1;\n    setValue('');\n    if (root) setRoot(root);\n  }\n\n  return (\n    <Root>\n      <InputContainer>\n        <Input type='number' value={value} onChange={handleChange} />\n        <Button type='submit' onClick={handleClickAdd} value='add node' disabled={!value || error} />\n      </InputContainer>\n      <Error>{error}</Error>\n    </Root>\n  )\n};\n\nexport default Add;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components/macro';\nimport RenderTree from './RenderTree';\nimport Add from './inputs/Add';\n\nconst TreeContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex-grow: 1;\n  min-width: 100vw;\n  width: fit-content;\n`;\n\nconst ControlPanel = styled.div`\n  position: fixed;\n  color: white;\n  padding: 8px;\n  z-index: 1;\n`;\n\nconst NotMobileOrTabletOptimizedMessage = styled.div`\n  position: absolute;\n  bottom: 10px;\n  width: 100vw;\n  text-align: center;\n  font-size: calc(5px + 2vmin);\n`;\n\nconst BinarySearchTree = () => {\n  const [root, setRoot] = useState(null);\n  const [windowDimensions, setWindowDimensions] = useState({\n    height: window.innerHeight,\n    width: window.innerWidth,\n  });\n\n  const handleSetRoot = newRoot => setRoot({ ...newRoot }); // replaces root instead of mutates it\n\n  const handleResize = () => setWindowDimensions({\n    height: window.innerHeight,\n    width: window.innerWidth,\n  });\n\n  useEffect(() => window.addEventListener('resize', handleResize), []);\n\n  useEffect(() => window.addEventListener('scroll', handleResize), []);\n\n  const getTreeHeight = (node = root) => {\n    if (node === null) return 0;\n\n    let childHeight;\n    if (node.left && node.right) {\n      const leftHeight = getTreeHeight(node.left);\n      const rightHeight = getTreeHeight(node.right);\n      childHeight = leftHeight > rightHeight ? leftHeight : rightHeight;\n    } else if (node.left) {\n      childHeight = getTreeHeight(node.left);\n    } else if (node.right) {\n      childHeight = getTreeHeight(node.right);\n    } else {\n      childHeight = 0;\n    }\n\n    return childHeight + 1;\n  }\n\n  const treeHeight = getTreeHeight();\n\n  return (\n    <>\n      <ControlPanel>\n        <Add root={root} setRoot={handleSetRoot} />\n      </ControlPanel>\n      <TreeContainer>\n        {root === null && <div>Start by adding a node (enter a number).</div>}\n        <RenderTree nodes={[root]} level={treeHeight} treeHeight={treeHeight} />\n      </TreeContainer>\n      {windowDimensions.width < 800 &&\n        <NotMobileOrTabletOptimizedMessage>\n          This app is not yet optimized for mobile or tablet\n        </NotMobileOrTabletOptimizedMessage>\n      }\n    </>\n  );\n};\n\nexport default BinarySearchTree;\n","import React from 'react';\nimport styled from 'styled-components/macro';\nimport BinarySearchTree from './BinarySearchTree';\n\nconst Root = styled.div`\n  background-color: #282c34;\n  min-height: 100vh;\n  min-width: 100vw;\n  display: flex;\n  flex-direction: column;\n  font-size: calc(10px + 1.5vmin);\n  color: white;\n`;\n\nconst App = () => {\n  return (\n    <Root>\n      <BinarySearchTree />\n    </Root>\n  )\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}